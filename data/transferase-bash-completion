# Function to handle autocompletion for 'transferase'
_transferase_completion() {
    local cur prev subcommands options

    # Attempt to determine the binary path from the first word (which
    # might be a relative/absolute path)
    binary_path="${COMP_WORDS[0]}"

    # If the first word is just the command name (e.g., 'transferase'
    # without a path)
    if [ ! -x "${binary_path}" ]; then
        # If no path is provided, fall back to searching in $PATH
        binary_path=$(command -v transferase)
        # If the binary isn't found, just return silently without doing anything
        if [ ! -x "$binary_path" ]; then
            return
        fi
    fi

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    # Below needs to be fixed because not all grep has the Perl mode

    # Get list of subcommands from 'transferase --help'
    subcommands=$("$binary_path" | awk '/^    /{print $1}' | tr '\n' ' ')
    # If we're completing the subcommand (the first argument after the command
    # itself)
    if [[ ${COMP_CWORD} -eq 1 ]]; then
        COMPREPLY=($(compgen -W "${subcommands}" -- "$cur"))
        return
    fi

    # Get options for the current subcommand (if available)
    options=$("${binary_path}" "${COMP_WORDS[1]}" | \
                  awk '/  \-/ {split($1, array, ","); print array[2]}')
    # Check if the previous token begins with an unescaped dash and
    # has the suffix dir, and if so, suggest a directory
    if [[ "$prev" =~ ^[^\\-]*-*.*dir ]]; then
        # Attempt to expand directory names
        COMPREPLY=( $(compgen -d -- "$cur") )
        return
    fi

    # Check if the previous token begins with an unescaped dash and
    # has the suffix 'file', and if so, suggest a file or directory
    if [[ "$prev" =~ ^[^\\-]*-*.*file ]]; then
        # Attempt to expand filenames/paths/directories
        COMPREPLY=( $(compgen -f -- "$cur") )
        return
    fi

    COMPREPLY=($(compgen -W "${options}" -- "$cur"))
    COMPREPLY+=($(compgen -f -- "$cur"))
    return
}

# Register the completion function for the 'transferase' command and
# the 'xfr' alias
complete -F _transferase_completion transferase
complete -F _transferase_completion xfr
