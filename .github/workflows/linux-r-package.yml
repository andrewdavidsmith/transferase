# This workflow also uploads the package as an artifact
name: Build transferase R API on Linux

on:
  workflow_dispatch:

env:
  MAKEFLAGS: -j4
  DEBIAN_FRONTEND: noninteractive

jobs:
  build-r:
    runs-on: ubuntu-latest
    container: debian:sid
    steps:
      - name: Install Debian dependencies
        run: |
          apt-get update && \
          apt-get install -y --no-install-recommends \
          ca-certificates \
          git \
          gcc \
          g++ \
          cmake \
          make \
          libdeflate-dev \
          libssl-dev \
          libxml2-dev \
          r-base-dev \
          texlive \
          texlive-fonts-extra
      - name: Install R dependencies
        run: |
          R -e 'install.packages(c("R6", "Rcpp", "roxygen2"), repos = "https://cloud.r-project.org")'
      - uses: actions/checkout@v4
      - name: Generate R API source tree
        run: |
          cmake -B build -DBUILD_R=on -DCMAKE_INSTALL_PREFIX=Rxfr -Wno-dev && \
          cmake --install build
      - name: Build for making docs
        run: |
          R CMD INSTALL --no-inst Rxfr && \
          Rscript -e "library(roxygen2, R6); roxygen2::roxygenize('Rxfr')" && \
          mkdir Rxfr/doc && \
          R CMD Rd2pdf -o Rxfr/doc/Rxfr.pdf --no-preview Rxfr
      - name: Get version number
        id: get-vn
        run: |
          awk '/^  VERSION [0-9.]+$/ {print "vn="$NF}' CMakeLists.txt >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Build and check the package
        run: |
          R CMD build Rxfr && \
          R CMD check Rxfr_${{ steps.get-vn.outputs.vn }}.tar.gz
      - name: Upload the package
        uses: actions/upload-artifact@v4
        with:
          name: Rxfr_${{ steps.get-vn.outputs.vn }}.tar.gz
          path: Rxfr_${{ steps.get-vn.outputs.vn }}.tar.gz
