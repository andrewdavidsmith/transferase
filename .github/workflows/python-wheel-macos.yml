name: Python wheel on macOS

on:
  workflow_dispatch:

env:
  OPENSSL_VERSION: 3.4.0

jobs:
  build-wheel:
    strategy:
      matrix:
        os: [macos-13]
        python: ['3.12']
    name: "Python ${{ matrix.python }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Update Homebrew
        run: brew update
      - name: Install dependencies
        run: |
          brew install zlib
      - name: Build openssl
        run: |
          # Get the source and make a build dir
          cd /tmp
          wget -nv https://github.com/openssl/openssl/releases/download/openssl-${OPENSSL_VERSION}/openssl-${OPENSSL_VERSION}.tar.gz
          tar -xf openssl-${OPENSSL_VERSION}.tar.gz
          cd openssl-${OPENSSL_VERSION}
          mkdir build && cd build
          # Configure with all those options...
          cat ${GITHUB_WORKSPACE}/data/openssl_options.txt | \
          xargs ../Configure --prefix=/tmp/openssl_custom CC=gcc-14 CXX=g++-14
          # Build the library
          make -j2 \
          CFLAGS="-Wall -Os -fomit-frame-pointer -ffunction-sections -fdata-sections -mmacosx-version-min=13" \
          CXXFLAGS="-Wall -Os -fomit-frame-pointer -ffunction-sections -fdata-sections -mmacosx-version-min=13"
          make install
      - name: Install Python packages
        run: |
          python --version
          python -m pip install nanobind pytest wheel hatch packaging numpy
      - name: Configure
        run: |
          cmake -B build \
          -DCMAKE_VERBOSE_MAKEFILE=on \
          -DCMAKE_PREFIX_PATH="/tmp/ncurses_custom;/tmp/openssl_custom" \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=13 \
          -DCMAKE_CXX_FLAGS="-I$(brew --prefix)/include" \
          -DCMAKE_EXE_LINKER_FLAGS="-L$(brew --prefix)/lib" \
          -DZLIB_LIBRARY=$(brew --prefix zlib)/lib/libz.a \
          -DCMAKE_CXX_COMPILER=g++-14 \
          -DBUILD_PYTHON=on \
          -DPACKAGE_PYTHON=on \
          -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: |
          cmake --build build -j4
      - name: Get version number
        id: get-vn
        run: |
          awk '/^  VERSION [0-9.]+$/ {print "vn="$NF}' CMakeLists.txt >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Check that it runs
        run: |
          python -m pip install build/python/dist/pyxfr-${{ steps.get-vn.outputs.vn }}-*.whl
          python -c "import pyxfr; help(pyxfr)"
      - name: Upload macos wheel
        uses: actions/upload-artifact@v4
        with:
          name: pyxfr-${{ steps.get-vn.outputs.vn }}-Python-${{ matrix.python }}-${{ matrix.os }}-${{ runner.arch }}
          path: build/python/dist/pyxfr-${{ steps.get-vn.outputs.vn }}-*.whl
      - name: Upload macos so
        uses: actions/upload-artifact@v4
        with:
          name: pyxfr-${{ steps.get-vn.outputs.vn }}-Python-${{ matrix.python }}-${{ matrix.os }}-${{ runner.arch }}-so
          path: build/python/pyxfr/pyxfr*.so

